{
  "title": "创建连接",
  "template": "form",
  "fields": [
    {
      "key": "id",
      "label": "ID",
      "type": "text",
      "required": true
    },
    {
      "key": "name",
      "label": "名称",
      "type": "text",
      "required": true
    },
    {
      "key": "port_name",
      "label": "串口",
      "type": "select",
      "options": []
    },
    {
      "key": "baud_rate",
      "label": "波特率",
      "type": "number",
      "default": 9600
    },
    {
      "key": "data_bits",
      "label": "字长",
      "type": "number",
      "default": 8
    },
    {
      "key": "stop_bits",
      "label": "结束符",
      "type": "radio",
      "options": [
        {
          "value": 1,
          "label": "1"
        },
        {
          "disabled": true,
          "value": 2,
          "label": "1.5"
        },
        {
          "value": 2,
          "label": "2"
        }
      ]
    },
    {
      "key": "parity_mode",
      "label": "检验模式",
      "type": "radio",
      "options": [
        {
          "value": 0,
          "label": "None"
        },
        {
          "value": 1,
          "label": "Odd"
        },
        {
          "value": 2,
          "label": "Even"
        }
      ]
    },
    {
      "key": "protocol",
      "label": "协议",
      "type": "select",
      "options": [],
      "change_action": {
        "type": "script",
        "script": "setTimeout(()=>this.load_protocol_option(), 200)"
      }
    },
    {
      "key": "protocol_options",
      "label": "协议参数",
      "type": "object",
      "children": []
    }
  ],
  "submit_api": "serial-port/create",
  "submit_success": "this.navigate('/page/serial-port/serial-detail?id='+data.id)",
  "mount": "this.load_serials(); this.load_protocols()",
  "methods": {
    "load_serials": "this.request.get('serial-port/ports').subscribe(res=>{this.content.fields[2].options=res.data.map(d=>{return {value:d,label:d}}); })",
    "load_protocols": "this.request.get('iot/protocol/list').subscribe(res=>{this.content.fields[7].options=res.data.map(d=>{return {value:d.name,label:d.description}}); setTimeout(()=>this.load_protocol_option(), 200);  })",
    "load_protocol_option": "this.editor.value.protocol && this.request.get('iot/protocol/'+this.editor.value.protocol).subscribe(res=>{this.content.fields[8].children=res.options; setTimeout(()=>this.editor.rebuild(), 200)})"
  }
}